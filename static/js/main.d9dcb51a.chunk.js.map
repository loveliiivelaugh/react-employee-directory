{"version":3,"sources":["components/EmployeeTable.js","util/sort.js","components/SearchForm.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","table","minWidth","large","width","spacing","height","EmployeeTable","employees","handleSort","classes","TableContainer","component","Paper","Table","className","size","aria-label","TableHead","TableRow","TableCell","Button","onClick","TableBody","map","user","Avatar","src","picture","medium","alt","name","first","last","gender","dob","date","moment","format","age","email","phone","cell","location","street","number","city","state","country","postcode","timezone","description","login","username","uuid","sort","inputRoot","color","inputInput","padding","paddingLeft","transition","transitions","create","breakpoints","up","array","a","b","Copyright","Typography","variant","align","Link","href","Date","getFullYear","root","flexGrow","menuButton","marginRight","title","display","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","pointerEvents","alignItems","justifyContent","icon","heroContent","background","paper","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","flexDirection","cardMedia","cardContent","footer","App","useState","users","setUsers","useEffect","fetch","then","response","json","data","results","catch","error","console","fetchData","CssBaseline","AppBar","Toolbar","IconButton","edge","noWrap","InputBase","placeholder","onChange","event","preventDefault","items","text","target","value","trim","log","split","filter","item","every","el","indexOf","input","inputProps","Container","maxWidth","gutterBottom","paragraph","category","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9dcb51a.chunk.js","sourcesContent":["import React from 'react';\n//utility\nimport moment from 'moment';\n//material-ui\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n}));\n\n\nconst EmployeeTable = ({ employees, handleSort }) => {\n  const classes = useStyles();\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n      <TableHead>\n        <TableRow>\n          <TableCell>Picture</TableCell>\n          <TableCell>First <Button onClick={() => handleSort(\"first\")}><ArrowDropDownIcon /></Button></TableCell>\n          <TableCell>Last <Button onClick={() => handleSort(\"last\")}><ArrowDropDownIcon /></Button></TableCell>\n          <TableCell>Gender</TableCell>\n          <TableCell>DOB</TableCell>\n          <TableCell>Age <Button onClick={() => handleSort(\"age\")}><ArrowDropDownIcon /></Button></TableCell>\n          <TableCell>Email <Button onClick={() => handleSort(\"email\")}><ArrowDropDownIcon /></Button></TableCell>\n          <TableCell>Phone <Button onClick={() => handleSort(\"phone\")}><ArrowDropDownIcon /></Button></TableCell>\n          <TableCell>Cell <Button onClick={() => handleSort(\"cell\")}><ArrowDropDownIcon /></Button></TableCell>\n          <TableCell>Street <Button onClick={() => handleSort(\"street\")}><ArrowDropDownIcon /></Button></TableCell>\n          <TableCell>City <Button onClick={() => handleSort(\"city\")}><ArrowDropDownIcon /></Button></TableCell>\n          <TableCell>State <Button onClick={() => handleSort(\"state\")}><ArrowDropDownIcon /></Button></TableCell>\n          <TableCell>Country <Button onClick={() => handleSort(\"country\")}><ArrowDropDownIcon /></Button></TableCell>\n          <TableCell>Postal <Button onClick={() => handleSort(\"postal\")}><ArrowDropDownIcon /></Button></TableCell>\n          <TableCell>Timezone</TableCell>\n          <TableCell>Username <Button onClick={() => handleSort(\"username\")}><ArrowDropDownIcon /></Button></TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {employees.map(user => (\n          <TableRow key={user.login.uuid}>\n            <TableCell>\n              <Avatar src={user.picture.medium && user.picture.medium} alt=\"thumbnail\" className={classes.large} />\n            </TableCell>\n            <TableCell>{user.name.first && user.name.first}</TableCell>\n            <TableCell>{user.name.last && user.name.last}</TableCell>\n            <TableCell>{user.gender && user.gender}</TableCell>\n            <TableCell>{user.dob.date && moment(user.dob.date).format('M/D/YYYY')}</TableCell>\n            <TableCell>{user.dob.age && user.dob.age}</TableCell>\n            <TableCell>{user.email && user.email}</TableCell>\n            <TableCell>{user.phone && user.phone}</TableCell>\n            <TableCell>{user.cell && user.cell}</TableCell>\n            <TableCell>{user.location.street && user.location.street.number + \" \" + user.location.street.name}</TableCell>\n            <TableCell>{user.location.city && user.location.city}</TableCell>\n            <TableCell>{user.location.state && user.location.state}</TableCell>\n            <TableCell>{user.location.country && user.location.country}</TableCell>\n            <TableCell>{user.location.postcode && user.location.postcode}</TableCell>\n            <TableCell>{user.location.timezone.description && user.location.timezone.description}</TableCell>\n            <TableCell>{user.login.username && user.login.username}</TableCell>\n          </TableRow>\n          ))\n        }\n      </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport default EmployeeTable;","export const sort = {\n\n  sortByFirst: (array) => { \n    array.sort((a, b) => {\n      if (a.name.first < b.name.first) {\n        return -1;\n      }\n      return 0;\n    });\n  },\n\n  sortByLast: (array) => { \n    array.sort((a, b) => {\n      if (a.name.last < b.name.last) {\n        return -1;\n      }\n      return 0;\n    });\n  },\n\n  sortByAge: (array) => { \n    array.sort((a, b) => {\n      if (a.dob.age < b.dob.age) {\n        return -1;\n      }\n      return 0;\n    });\n  },\n\n  sortByEmail: (array) => { \n    array.sort((a, b) => {\n      if (a.email < b.email) {\n        return -1;\n      }\n      return 0;\n    });\n  },\n\n  sortByPhone: (array) => { \n    array.sort((a, b) => {\n      if (a.phone < b.phone) {\n        return -1;\n      }\n      return 0;\n    });\n  },\n\n  sortByCell: (array) => { \n    array.sort((a, b) => {\n      if (a.cell < b.cell) {\n        return -1;\n      }\n      return 0;\n    });\n  },\n\n  sortByStreet: (array) => { \n    array.sort((a, b) => {\n      if (a.location.street.name < b.location.street.name) {\n        return -1;\n      }\n      return 0;\n    });\n  },\n\n  sortByCity: (array) => { \n    array.sort((a, b) => {\n      if (a.location.city < b.location.city) {\n        return -1;\n      }\n      return 0;\n    });\n  },\n\n  sortByState: (array) => { \n    array.sort((a, b) => {\n      if (a.location.state < b.location.state) {\n        return -1;\n      }\n      return 0;\n    });\n  },\n\n  sortByCountry: (array) => { \n    array.sort((a, b) => {\n      if (a.location.country < b.location.country) {\n        return -1;\n      }\n      return 0;\n    });\n  },\n\n  sortByPostal: (array) => { \n    array.sort((a, b) => {\n      if (a.location.postcode < b.location.postcode) {\n        return -1;\n      }\n      return 0;\n    });\n  },\n\n  sortByUsername: (array) => { \n    array.sort((a, b) => {\n      if (a.login.username < b.login.username) {\n        return -1;\n      }\n      return 0;\n    });\n  },\n\n}\n","import React from 'react';\nimport InputBase from '@material-ui/core/InputBase';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nconst SearchForm = ({ handleSearchFilter }) => {\n  const classes = useStyles();\n  return (\n    <form>\n      <label htmlFor=\"search\"></label>\n      <InputBase\n        placeholder=\"Search…\"\n        onChange={handleSearchFilter}\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        }}\n        inputProps={{ 'aria-label': 'search' }}\n      />\n      {/* <input name=\"search\" onChange={handleSearchFilter}></input> */}\n    </form>\n  )\n}\n\nexport default SearchForm;\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\n//components\nimport EmployeeTable from './components/EmployeeTable';\nimport SearchForm from './components/SearchForm';\n//utilites\nimport { sort } from './util/sort.js';\n//material-ui\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const classes = useStyles();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch('https://randomuser.me/api/?results=20')\n        .then(response => response.json())\n        .then(data => setUsers(data.results))\n        .catch(error => console.error(error));\n    };\n    fetchData();\n  }, []);\n\n\n  const handleSort = category => {\n    let employees = [ ...users ];\n\n    console.log(category);\n\n    switch (category) {\n      case \"first\":\n        sort.sortByFirst(employees)\n        setUsers(employees);\n        break;\n      case \"last\":\n        sort.sortByLast(employees)\n        setUsers(employees);\n        break;\n      case \"age\":\n        sort.sortByAge(employees)\n        setUsers(employees);\n        break;\n      case \"email\":\n        sort.sortByEmail(employees)\n        setUsers(employees);\n        break;\n      case \"phone\":\n        sort.sortByPhone(employees)\n        setUsers(employees);\n        break;\n      case \"cell\":\n        sort.sortByCell(employees)\n        setUsers(employees);\n        break;\n      case \"street\":\n        sort.sortByStreet(employees)\n        setUsers(employees);\n        break;\n      case \"city\":\n        sort.sortByCity(employees)\n        setUsers(employees);\n        break;\n      case \"state\":\n        sort.sortByState(employees)\n        setUsers(employees);\n        break;\n      case \"country\":\n        sort.sortByCountry(employees)\n        setUsers(employees);\n        break;\n      case \"postal\":\n        sort.sortByPostal(employees)\n        setUsers(employees);\n        break;\n      case \"username\":\n        sort.sortByUsername(employees)\n        setUsers(employees);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const find = (items, text) => {\n    text = text.split(' ');\n    return items.filter(item => {\n      return text.every(el => {\n        console.log(el, item)\n        return item.name.first.indexOf(el) ? \n          item.name.first.indexOf(el) > -1 ||\n          item.name.last.indexOf(el) > -1 ||\n          item.name.first.indexOf(el) > -1 ||\n          item.email.indexOf(el) > -1 ||\n          item.phone.indexOf(el) > -1 ||\n          // item.dob.age.indexOf(el) > -1 || //need to format age to a string\n          item.cell.indexOf(el) > -1 ||\n          item.location.city.indexOf(el) > -1 ||\n          item.location.state.indexOf(el) > -1 ||\n          item.location.country.indexOf(el) > -1 ||\n          item.login.username.indexOf(el) > -1 ||\n          item.location.street.name.indexOf(el) > -1 : \n          \"No items match your search\";\n      });\n    });\n  };\n\n  const handleSearchFilter = event => {\n    event.preventDefault();\n    const search = event.target.value.trim();\n    console.log(search)\n    setUsers(find([ ...users ], search));\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Employee Directory\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              onChange={handleSearchFilter}\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"lg\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n            Employee Directory\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              A small React app using the Randomuser.me API to generate a list of employees to populate to a table. \n              The table can then be sorted by a number of categories and this app also includes a search bar to enable filtering the table as well. \n              The styling of the app is handled with MaterialUI and it is deployed using GitHub pages.\n            </Typography>\n            {users &&\n              <EmployeeTable employees={users} handleSort={handleSort} />\n            }\n          </Container>\n        </div>\n      </main>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Employee Directory\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          A quick and easy way to find and reference your employees!\n        </Typography>\n        <Copyright />\n      </footer>\n      {/* End footer */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}